/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.netbeansrcp.taskduplicator;

import com.netbeansrcp.taskmodel.TaskImpl;
import com.netbeansrcp.taskmodel.api.Task;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.List;
import org.openide.util.LookupEvent;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupListener;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//com.netbeansrcp.taskduplicator//TaskDuplicator//EN",
autostore = false)
@TopComponent.Description(preferredID = "TaskDuplicatorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "com.netbeansrcp.taskduplicator.TaskDuplicatorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_TaskDuplicatorAction",
preferredID = "TaskDuplicatorTopComponent")
public final class TaskDuplicatorTopComponent extends TopComponent implements PropertyChangeListener, LookupListener {

    private Lookup.Result<Task> result;
    private Task task;
    private InstanceContent ic = new InstanceContent();

    private TaskDuplicatorTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(TaskDuplicatorTopComponent.class, "CTL_TaskDuplicatorTopComponent"));
        setToolTipText(NbBundle.getMessage(TaskDuplicatorTopComponent.class, "HINT_TaskDuplicatorTopComponent"));
        associateLookup(new AbstractLookup(ic));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelDueDate = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelPriority = new javax.swing.JLabel();
        jLabelProgress = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelName, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabelName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelDueDate, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabelDueDate.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelPriority, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabelPriority.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelProgress, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabelProgress.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelDescription, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jLabelDescription.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(TaskDuplicatorTopComponent.class, "TaskDuplicatorTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelDueDate))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPriority))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelProgress))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelDescription)))
                .addContainerGap(295, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(87, 87, 87))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel3, jLabel5, jLabel6, jLabel7});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelDueDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelPriority))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelProgress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Task t = new TaskImpl();
        t.setName(task.getName());
        t.setDue(task.getDue());
        t.setPrio(task.getPrio());
        t.setProgr(task.getProgr());
        t.setDescr(task.getDescr());
        List<Task> tasks = new ArrayList<Task>();
        tasks.add(t);
        ic.set(tasks, null);
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelDueDate;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPriority;
    private javax.swing.JLabel jLabelProgress;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        result = WindowManager.getDefault().findTopComponent("TaskEditorTopComponent").getLookup().lookupResult(Task.class);
        result.addLookupListener(this);
        task = (Task) result.allInstances().toArray()[0];
        task.addPropertyChangeListener(this);
    }

    @Override
    public void componentClosed() {
        task.removePropertyChangeListener(this);
        result = null;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        updateTaskInfo();
    }

    @Override
    public void resultChanged(LookupEvent ev) {
        Task[] tasks = result.allInstances().toArray(new TaskImpl[]{});
        Task newTask = tasks[tasks.length - 1];
        task.removePropertyChangeListener(this);
        task = newTask;
        task.addPropertyChangeListener(this);
        updateTaskInfo();
    }

    private void updateTaskInfo() {
        jLabelName.setText(task.getName());
        jLabelDueDate.setText(DateFormat.getInstance().format(task.getDue()));
        jLabelPriority.setText("" + task.getPrio());
        jLabelProgress.setText("" + task.getProgr());
        jLabelDescription.setText("" + task.getDescr());
    }
}
